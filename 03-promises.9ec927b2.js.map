{"mappings":"siBAGA,MAAMA,EAASC,SAASC,cAAc,SACtC,IAAIC,EAAY,GA4BhB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACZJ,KAAKC,SAEpBI,YAAW,KACLN,EAEFI,EAAQ,uBAAqBN,QAAiBC,OAG9CM,EAAO,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CAIb,SAASQ,EAAuBC,GAC9BC,EAAAC,GAASC,OAAOC,QAAQJ,GACxBK,QAAQC,IAAIN,E,CAGd,SAASO,EAAqBC,GAC5BP,EAAAC,GAASC,OAAOM,QAAQD,GACxBH,QAAQC,IAAIE,E,CAlDdvB,EAAOyB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUtB,MAAEA,EAAKuB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,OACV5B,EAAUG,MAAQ0B,OAAO1B,EAAM2B,OAC/B9B,EAAU0B,KAAOG,OAAOH,EAAKI,OAC7B9B,EAAU2B,OAASE,OAAOF,EAAOG,OAEjCP,EAAMQ,cAAcC,QACpBf,QAAQC,IAAIlB,GAId,SAAsBG,EAAOuB,EAAMC,GACjCV,QAAQC,IAAI,C,MAAEf,E,KAAOuB,E,OAAMC,IAC3B,IAAK,IAAIM,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAChChC,EAAcgC,EAAG9B,GACd+B,KAAKvB,GACLwB,MAAMhB,GACThB,GAASuB,C,CATXU,CAAapC,EAAUG,MAAOH,EAAU0B,KAAM1B,EAAU2B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nlet userInput = {};\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.target;\n  userInput.delay = Number(delay.value);\n  userInput.step = Number(step.value);\n  userInput.amount = Number(amount.value);\n\n  event.currentTarget.reset();\n  console.log(userInput);\n  startPromise(userInput.delay, userInput.step, userInput.amount);\n}\n\nfunction startPromise(delay, step, amount) {\n  console.log({ delay, step, amount });\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(onCreatePromiseSuccess)\n      .catch(onCreatePromiseError);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    const passed = Math.random() > 0.5;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromiseSuccess(result) {\n  Notiflix.Notify.success(result);\n  console.log(result);\n}\n\nfunction onCreatePromiseError(error) {\n  Notiflix.Notify.failure(error);\n  console.log(error);\n}\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$userInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onCreatePromiseSuccess","result","$parcel$interopDefault","$eWCmQ","Notify","success","console","log","$47d4ff9957288465$var$onCreatePromiseError","error","failure","addEventListener","event","preventDefault","elements","step","amount","target","Number","value","currentTarget","reset","i","then","catch","$47d4ff9957288465$var$startPromise"],"version":3,"file":"03-promises.9ec927b2.js.map"}